<UserControl x:Class="LibgenDesktop.Views.Tabs.LibraryTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:c="clr-namespace:LibgenDesktop.Views.Controls"
             xmlns:const="clr-namespace:LibgenDesktop.Common"
             xmlns:u="clr-namespace:LibgenDesktop.Views.Utils">
    <UserControl.Resources>
        <ResourceDictionary Source="/LibgenDesktop;component/Views/Styles/LibraryTabStyles.xaml" />
    </UserControl.Resources>
    <Grid Style="{StaticResource TopContainer}">
        <StackPanel Visibility="{Binding AreScanButtonsVisible, Converter={StaticResource booleanToCollapsedConverter}}">
            <Button Content="{Binding Localization.ScanNonFiction}" Command="{Binding ScanNonFictionCommand}" Style="{StaticResource ScanButton}" />
            <Button Content="{Binding Localization.ScanFiction}" Command="{Binding ScanFictionCommand}" Style="{StaticResource ScanButton}" />
            <Button Content="{Binding Localization.ScanSciMag}" Command="{Binding ScanSciMagCommand}" Style="{StaticResource ScanButton}" />
        </StackPanel>
        <TabControl Visibility="{Binding IsResultsPanelVisible, Converter={StaticResource booleanToCollapsedConverter}}">
            <TabItem Header="{Binding FoundTabHeaderTitle}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <DataGrid Grid.Row="0" Name="foundDataGrid" ItemsSource="{Binding FoundItems}" ColumnWidth="*" Style="{StaticResource FoundDataGrid}">
                        <DataGrid.Resources>
                            <u:BindingProxy x:Key="dataGridViewModel" DataContext="{Binding}" />
                        </DataGrid.Resources>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                                <Setter Property="u:DataGridExtensions.DoubleClickCommand"
                                        Value="{Binding ElementName=foundDataGrid, Path=DataContext.OpenDetailsCommand}" />
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.InputBindings>
                            <KeyBinding Command="{Binding FoundDataGridEnterKeyCommand}" Key="Enter" />
                        </DataGrid.InputBindings>
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding RelativeFilePath}"
                                                Header="{Binding DataContext.Localization.ColumnsFile, Source={StaticResource dataGridViewModel}}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style>
                                        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding Authors}"
                                                Header="{Binding DataContext.Localization.ColumnsAuthors, Source={StaticResource dataGridViewModel}}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style>
                                        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding Title}"
                                                Header="{Binding DataContext.Localization.ColumnsTitle, Source={StaticResource dataGridViewModel}}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style>
                                        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTemplateColumn SortMemberPath="ExistsInLibrary"
                                                    Width="{Binding Source={x:Static const:Constants.LIBRARY_GRID_EXISTS_IN_LIBRARY_COLUMN_WIDTH}}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ContentControl Name="tickMarkContainer" Content="{StaticResource tickMark}" Visibility="Hidden" />
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding ExistsInLibrary}" Value="True">
                                                <Setter TargetName="tickMarkContainer" Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button Grid.Row="1" Content="{Binding AddAllFilesToLibraryButtonCaption}" Style="{StaticResource AddAllButton}"
                            Visibility="{Binding IsAddAllFilesToLibraryButtonVisible, Converter={StaticResource booleanToHiddenConverter}}"
                            IsEnabled="{Binding IsAddAllFilesToLibraryButtonEnabled}" Command="{Binding AddAllFilesToLibraryCommand}" />
                </Grid>
            </TabItem>
            <TabItem Header="{Binding NotFoundTabHeaderTitle}">
                <DataGrid ItemsSource="{Binding NotFoundItems}" ColumnWidth="*" Style="{StaticResource NotFoundDataGrid}">
                    <DataGrid.Resources>
                        <u:BindingProxy x:Key="dataGridViewModel" DataContext="{Binding}" />
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding}"
                                            Header="{Binding DataContext.Localization.ColumnsFile, Source={StaticResource dataGridViewModel}}">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="{Binding ErrorsTabHeaderTitle}">
                <DataGrid ItemsSource="{Binding Errors}" ColumnWidth="*" Style="{StaticResource NotFoundDataGrid}">
                    <DataGrid.Resources>
                        <u:BindingProxy x:Key="dataGridViewModel" DataContext="{Binding}" />
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding RelativeFilePath}"
                                            Header="{Binding DataContext.Localization.ColumnsFile, Source={StaticResource dataGridViewModel}}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style>
                                        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding ErrorType}"
                                            Header="{Binding DataContext.Localization.ColumnsErrorType, Source={StaticResource dataGridViewModel}}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style>
                                        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding Description}"
                                            Header="{Binding DataContext.Localization.ColumnsErrorDescription, Source={StaticResource dataGridViewModel}}">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="{Binding Localization.ScanLog}" IsSelected="{Binding IsScanLogTabSelected}">
                <c:AutoScrollViewer Style="{StaticResource LogPanel}">
                    <ItemsControl ItemsSource="{Binding ScanLogs}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" TextWrapping="Wrap" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </c:AutoScrollViewer>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
